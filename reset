# Obejction

Current OpenOCD provide abstraction for reset handling. Currently it is
handling all types of reset as one. This paper should collect and reflect
common designs and standards, which can be used to improve OpenOCD reset handling
interface.

# Reset types

- Board reset.
  Comparable with power cycle. All SoCs, ROM, RAM, etc should be in
  predictable initial state.
  Know implementations:
  - ARM...
  - MIPS: optional RST pin EJTAG 14-pin connector. According to EJTAG 3.10:
    "RST is the system reset of the target board. When the probe asserts
    RST low, the result is either a reset (recommended) or soft reset of the
    processor." So, depending on implementation RST pin on EJTAG connector
    may reset complete board or only one (?) CPU core of one SoC.

- SoC(s?) reset.
  Some boards provide different interfaces for one SoC reset. Some boards
  with multiple SoCs provide multiple JATG headers with multiple reset pins.
  SoC reset is usually done with special input pin provided by SoC and handled
  by own reset infrastructure. The reset sensitivity depends on design of
  SoC

- CPU reset.
  Depending on design of SoC it may have SMP or AMP cores with different
  dependencies.
  So far following example are know:
  - iMX7d has 2x Cortex a7 and 1x Cortex m4 CPU with complicated TAP system
  allowing access and debug different peripheral parts including USB and DMA
  engine. The reset state of peripheral is controlled from Cortex a7 or
  JTAG-DMA TAP. It means, some requirements should be made to be able control
  reset state of Cortex m4 CPU.
  - Atheros ar9344 has only one TAP controlling CPU and less complicated
  reset infrastructure. This SoC do not provide PrRst or PerRst It means
  the external SoC reset will also reset complete JTAG engine. More flexible
  CPU reset will need to have working EJTAG and JTAG-CPU access logic.
  No other types of reset are provided by this SoC.

- SoC peripheral reset
  In most cases to reset some controller SoC provides a register set which
  is available from CPU (or DMA if available)

- more reset types?


# Reset Sensitivity
This example is take from MiniRISC EZ4021-FC documentation:
				Soft				TAP Ctrl
Module			Reset	Reset	PrRst	ERst	TRST	Reset
CPU			yes	yes	yes	no	no	no
CP0			yes	yes	yes	no	no	no
ICCi			yes	yes	yes	no	no	no
DCC			yes	yes	yes	no	no	no
BIU			yes	yes	yes	no	no	no
MMU			yes	no	no	no	no	no
MDU			yes	yes	yes	no	no	no
EJTAG iface:
- DMA/CPU Acc		yes	yes	yes	yes	yes	yes
  logic	
- Protocol engine	yes	no	no	yes	yes	yes
- Breakpoint		yes	no	no	yes	no	no
- PC trace		yes	no	no	yes	no	no

# Reset from On Chip Debugger point of view



# Comments
# 2018.02.04
PaulFertser | olerem: there were some related patches and ideas by Tomas Vanek, all posted on the mailing list.
PaulFertser | olerem: for cortex-m: two types of reset via jtag/swd: vectreset (only the cpu core), sysresetreq (should be same as srst)
PaulFertser | olerem: for cortex-m: srst shouldn't reset debug parts of the chip and it shouldn't prevent communication with the target. In fact many microcontroller vendor ignore the second requirement but at least the majority doensn't break the first.
PaulFertser | olerem: current reset command should be resetting core + peripherals + any external ICs that are connected to the same reset line, and nothing more.

Reset sensitivitiy for Qualcomm qca4531
- EJTAG PrRst and PerRst are not available
- RESET_L pin, what it will reset?
- Internal RESET register, what it will reset?
- Watchdog, wat it will reset?
